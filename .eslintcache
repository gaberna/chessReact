[{"E:\\Gagga\\chess-react\\src\\reportWebVitals.js":"1","E:\\Gagga\\chess-react\\src\\App.js":"2","E:\\Gagga\\chess-react\\src\\index.js":"3","E:\\Gagga\\chess-react\\src\\Pieces\\blackPiece.js":"4","E:\\Gagga\\chess-react\\src\\pieces.js":"5","E:\\Gagga\\chess-react\\src\\Pieces\\PieceFactory.js":"6","E:\\Gagga\\chess-react\\src\\WebSocketClient\\TurnManager.js":"7","E:\\Gagga\\chess-react\\src\\WebSocketClient\\EventManager.js":"8","E:\\Gagga\\chess-react\\src\\screens\\Game.js":"9","E:\\Gagga\\chess-react\\src\\Pieces\\Queen.js":"10","E:\\Gagga\\chess-react\\src\\Pieces\\PieceMovement.js":"11"},{"size":362,"mtime":1606265362668,"results":"12","hashOfConfig":"13"},{"size":359,"mtime":1607565227451,"results":"14","hashOfConfig":"13"},{"size":500,"mtime":1606265362668,"results":"15","hashOfConfig":"13"},{"size":952,"mtime":1607351966849,"results":"16","hashOfConfig":"13"},{"size":938,"mtime":1607617441102,"results":"17","hashOfConfig":"13"},{"size":1451,"mtime":1607651800021,"results":"18","hashOfConfig":"13"},{"size":1397,"mtime":1607651561971,"results":"19","hashOfConfig":"13"},{"size":1039,"mtime":1607617874090,"results":"20","hashOfConfig":"13"},{"size":2806,"mtime":1607658814208,"results":"21","hashOfConfig":"13"},{"size":798,"mtime":1607646969164,"results":"22","hashOfConfig":"13"},{"size":972,"mtime":1607657308052,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w5johp",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},"E:\\Gagga\\chess-react\\src\\reportWebVitals.js",[],"E:\\Gagga\\chess-react\\src\\App.js",["52"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Game } from \"./screens/Game\";\n\nconst Constants = {\n  socketUrl:\n    \"ws://megachess.herokuapp.com/service?authtoken=b12fdd43-930d-4f8d-8f41-24cdae62ba85\",\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game socketUrl={Constants.socketUrl} />\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Gagga\\chess-react\\src\\index.js",[],["53","54"],"E:\\Gagga\\chess-react\\src\\Pieces\\blackPiece.js",[],["55","56"],"E:\\Gagga\\chess-react\\src\\pieces.js",["57"],"export const Piece = {\r\n  PAWN: \"p\",\r\n  QUEEN: \"q\",\r\n  HORSE: \"h\",\r\n  ROCK: \"r\",\r\n  BISHOP: \"b\",\r\n  KING: \"k\",\r\n};\r\n\r\nexport function getFormatedPiece(piece, turn) {\r\n  let isBlack = turn === \"black\";\r\n  switch (piece) {\r\n    case Piece.PAWN: {\r\n      let val = isBlack ? Piece.PAWN : Piece.PAWN.toUpperCase();\r\n      return val;\r\n    }\r\n    case Piece.QUEEN: {\r\n      let val = isBlack ? Piece.QUEEN : Piece.QUEEN.toUpperCase();\r\n      return val;\r\n    }\r\n    case Piece.ROCK: {\r\n      let val = isBlack ? Piece.ROCK : Piece.ROCK.toUpperCase();\r\n      return val;\r\n    }\r\n    case Piece.HORSE: {\r\n      let val = isBlack ? Piece.HORSE : Piece.HORSE.toUpperCase();\r\n      return val;\r\n    }\r\n    case Piece.BISHOP: {\r\n      let val = isBlack ? Piece.BISHOP : Piece.BISHOP.toUpperCase();\r\n      return val;\r\n    }\r\n    case Piece.KING: {\r\n      let val = isBlack ? Piece.KING : Piece.KING.toUpperCase();\r\n      return val;\r\n    }\r\n  }\r\n}\r\n","E:\\Gagga\\chess-react\\src\\Pieces\\PieceFactory.js",[],"E:\\Gagga\\chess-react\\src\\WebSocketClient\\TurnManager.js",["58"],"import blackPiece from \"../Pieces/blackPiece\";\r\nimport getPieceMovement from \"../Pieces/PieceMovement\";\r\nimport { analizeBoard, selectPiece } from \"../Pieces/PieceFactory\";\r\n\r\n//REALIZAR MOVIMIENTO\r\nlet moveToSend = {\r\n  action: \"\",\r\n  data: {\r\n    board_id: \"\",\r\n    turn_token: \"\",\r\n    from_row: \"\",\r\n    from_col: \"\",\r\n    to_row: \"\",\r\n    to_col: \"\",\r\n  },\r\n};\r\n\r\nexport function makeMove(actual_turn, board_id, turn_token, board) {\r\n  let interpretedBoard = analizeBoard(board);\r\n  let selectedPiece = selectPiece(interpretedBoard, actual_turn);\r\n  const move = getPieceMovement(interpretedBoard, selectedPiece, actual_turn);\r\n  debugger;\r\n  //   if (actual_turn === \"black\") {\r\n  //     const move = blackPiece(interpretedBoard);\r\n\r\n  //     moveToSend = {\r\n  //       action: \"move\",\r\n  //       data: {\r\n  //         board_id: board_id,\r\n  //         turn_token: turn_token,\r\n  //         from_row: move.fromR,\r\n  //         from_col: move.fromC,\r\n  //         to_row: move.toR,\r\n  //         to_col: move.toC,\r\n  //       },\r\n  //     };\r\n  //   } else {\r\n  //     const move = getPieceMovement(interpretedBoard, actual_turn);\r\n\r\n  moveToSend = {\r\n    action: \"move\",\r\n    data: {\r\n      board_id: board_id,\r\n      turn_token: turn_token,\r\n      from_row: move.fromR,\r\n      from_col: move.fromC,\r\n      to_row: move.toR,\r\n      to_col: move.toC,\r\n    },\r\n  };\r\n  return moveToSend;\r\n}\r\n","E:\\Gagga\\chess-react\\src\\WebSocketClient\\EventManager.js",[],"E:\\Gagga\\chess-react\\src\\screens\\Game.js",["59","60","61","62","63","64","65"],"E:\\Gagga\\chess-react\\src\\Pieces\\Queen.js",[],"E:\\Gagga\\chess-react\\src\\Pieces\\PieceMovement.js",["66"],"import { Piece, getFormatedPiece } from \"../pieces.js\";\r\nimport { isPawnFirstMove } from \"./PieceFactory.js\";\r\n\r\nconst PieceMovements = {\r\n  [Piece.PAWN]: {\r\n    vertical: 1,\r\n    horizontal: 0,\r\n  },\r\n  [Piece.QUEEN]: {\r\n    vertical: 1,\r\n    horizontal: 0,\r\n  },\r\n};\r\n\r\nconst MovementsByTurn = {\r\n  black: 1,\r\n  white: -1,\r\n};\r\n\r\nexport default function getPieceMovement(board, selectedPiece, actual_turn) {\r\n  const { id } = selectedPiece;\r\n\r\n  const movements = PieceMovements[id.toLowerCase()];\r\n\r\n  const pawnFactor =\r\n    id.toLowerCase() === Piece.PAWN &&\r\n    isPawnFirstMove(selectedPiece.srcRow, actual_turn)\r\n      ? 2\r\n      : 1;\r\n\r\n  const movementsByTurn = MovementsByTurn[actual_turn];\r\n\r\n  const nextMove = {\r\n    fromC: selectedPiece.srcCol,\r\n    fromR: selectedPiece.srcRow,\r\n    toC: selectedPiece.srcCol + movements.horizontal,\r\n    toR:\r\n      selectedPiece.srcRow + movements.vertical * pawnFactor * movementsByTurn,\r\n  };\r\n\r\n  return nextMove;\r\n}\r\n",{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"71","replacedBy":"75"},{"ruleId":"73","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":12,"column":3,"nodeType":"79","messageId":"80","endLine":37,"endColumn":4},{"ruleId":"67","severity":1,"message":"81","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":18},{"ruleId":"67","severity":1,"message":"82","line":4,"column":3,"nodeType":"69","messageId":"70","endLine":4,"endColumn":10},{"ruleId":"83","severity":1,"message":"84","line":35,"column":34,"nodeType":"69","endLine":35,"endColumn":45},{"ruleId":"85","severity":1,"message":"86","line":40,"column":9,"nodeType":"87","messageId":"88","endLine":40,"endColumn":10},{"ruleId":"83","severity":1,"message":"84","line":45,"column":33,"nodeType":"69","endLine":45,"endColumn":44},{"ruleId":"85","severity":1,"message":"86","line":53,"column":9,"nodeType":"87","messageId":"88","endLine":53,"endColumn":10},{"ruleId":"83","severity":1,"message":"84","line":58,"column":28,"nodeType":"69","endLine":58,"endColumn":39},{"ruleId":"85","severity":1,"message":"86","line":65,"column":9,"nodeType":"87","messageId":"88","endLine":65,"endColumn":10},{"ruleId":"67","severity":1,"message":"89","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":33},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'blackPiece' is defined but never used.","'useMemo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'getFormatedPiece' is defined but never used.","no-global-assign","no-unsafe-negation"]